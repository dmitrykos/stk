/*
 * SuperTinyKernel: Minimalistic C++ thread scheduling kernel for Embedded systems.
 *
 * Source: http://github.com/dmitrykos/stk
 *
 * Copyright (c) 2025 Neutron Code Limited <stk@neutroncode.com>
 * License: MIT License, see LICENSE for a full text.
 */

#ifndef STK_CONFIG_H_
#define STK_CONFIG_H_

// note: Replace below includes with includes provided by the vendor of your board.
// note: Rename this file to stk_config.h and place to your project folder which references includes (normally where main.cpp is, see /example).

// Device-specific include file, example for NXP K66 MCU:
//#include "MK66F18.h"
//#include "core_cm4.h"
#cmakedefine _STK_DEVICE_INC "@_STK_DEVICE_INC@"
#ifdef _STK_DEVICE_INC
#include _STK_DEVICE_INC
#endif

// Define for Arm Cortex-M4 MCU
#cmakedefine _STK_ARCH_ARM_CORTEX_M

// Define for RISC-V
#cmakedefine _STK_ARCH_RISC_V

// Minimal stack size depending on the configured architecture (STK default is 32).
#if defined(_STK_ARCH_RISC_V) && (__riscv_32e != 1)
    #if (__riscv_flen == 0)
        #define STK_STACK_SIZE_MIN 64
    #else
        #define STK_STACK_SIZE_MIN 128
    #endif
#endif

// Define for x86, Windows
#cmakedefine _STK_ARCH_X86_WIN32

//  ISR handlers
#if defined(_STK_ARCH_ARM_CORTEX_M) || defined(_STK_ARCH_RISC_V)
    // Redefine if SysTick handler name is different from SysTick_Handler
    #cmakedefine _STK_SYSTICK_HANDLER @_STK_SYSTICK_HANDLER@

    // Redefine if PendSv handler name is different from PendSV_Handler
    #cmakedefine _STK_PENDSV_HANDLER @_STK_PENDSV_HANDLER@

    // Redefine if SVC handler name is different from SVC_Handler
    #cmakedefine _STK_SVC_HANDLER @_STK_SVC_HANDLER@
#endif

#endif /* STK_CONFIG_H_ */
